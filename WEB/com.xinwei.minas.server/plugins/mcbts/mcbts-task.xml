<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
         
	<bean id="mcBtsHeartbeatTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsHeartbeatTaskManager" factory-method="getInstance"/>
	<bean id="mcBtsHeartbeatTaskManager.init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetObject"><ref local="mcBtsHeartbeatTaskManager"/></property>
	    <property name="targetMethod"><value>initialize</value></property>	
	    <property name="arguments">
			<list>
				<value>${mcbts.heartbeat.task.failed_times_threashold}</value>
				<value>${mcbts.heartbeat.task.delay}</value>	
				<value>${mcbts.heartbeat.task.period}</value>		
			</list>
		</property>	         
	</bean>
	
	<bean id="mcBtsRegisterTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsRegisterTaskManager" factory-method="getInstance">
		<property name="createBtsAutomatically" value="${mcBtsRegisterTaskManager.createBtsAutomatically}"></property>
		<property name="maxRegisterNum" value="${mcBtsRegisterTaskManager.maxRegisterNum}"></property>
		<property name="retryNum" value="${mcBtsRegisterTaskManager.retryNum}"></property>
		<property name="retryInterval" value="${mcBtsRegisterTaskManager.retryInterval}"></property>
	</bean>

	<bean id="mcBtsUTUpgradeTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsUTUpgradeTaskManager" factory-method="getInstance" />
	
	<bean id="mcBtsUTRegisterTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsUTRegisterTaskManager" factory-method="getInstance" />
	
	<bean id="mcBtsCodeDownloadTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsCodeDownloadTaskManager" factory-method="getInstance">
	  <property name="btsVersionManageService" ref="mcBtsVersionManageService"></property>
	  <property name="timeout" value="${enb.version.timeout}"></property>
	</bean>
	
	<bean id="mcBtsUTCodeDownloadTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsUTCodeDownloadTaskManager" factory-method="getInstance" />
	
	<bean id="mcBtsGPSDataTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsGPSDataTaskManager" factory-method="getInstance">
		<constructor-arg value="${mcbts.gps.update.period}"/>
	</bean>
	
	<bean id="calibFileUploadTaskManager" class="com.xinwei.minas.server.mcbts.task.CalibFileUploadTaskManager" factory-method="getInstance" >
		<property name="ftpIp" value="${platform.ftp.ip}"></property>
		<property name="ftpUsername" value="${platform.ftp.username}"></property>
		<property name="ftpPassword" value="${platform.ftp.password}"></property>
		<property name="ftpPort" value="${platform.ftp.port}"></property>
		<property name="ftpPath" value="${mcbts.ftp.path_calibration_result}"></property>
		<property name="localPath" value="${mcbts.folder.calibration_result}"></property>
	</bean>
	
	<bean id="mcBtsQueryRRUVersionTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsQueryRRUVersionTaskManager" factory-method="getInstance"/>
	
	<bean id="mcBtsBatchUpgradeTaskManager" class="com.xinwei.minas.server.mcbts.task.McBtsBatchUpgradeTaskManager" factory-method="getInstance">
		<constructor-arg value="${mcbts.batch_upgrade.max_downloads}" />
		<constructor-arg value="${mcbts.mcbts_version.timeout}" />
		<constructor-arg ref="mcBtsBatchUpgradeDAO" />
		<property name="mcBtsBatchUpgradeArchiveDAO" ref="mcBtsBatchUpgradeArchiveDAO" />
		<property name="mcBtsVersionManageDAO" ref="mcBtsVersionManageDAO" />
		<property name="mcBtsBizProxy" ref="mcBtsBizProxy" />
		<property name="enbFileManagerProxy" ref="enbFileManagerProxy"></property>
		<property name="enbFullTableConfigService" ref="enbFullTableConfigService"></property>
		<property name="emsServerIp" value="${platform.ftp.ip}" />
		<property name="ftpUsername" value="${platform.ftp.username}" />
		<property name="ftpPassword" value="${platform.ftp.password}" />
		<property name="ftpPort" value="${platform.ftp.port}" />
		<property name="ftpSoftwarePath" value="${mcbts.ftp.path_mcbts_version}" />
		<property name="enbFtpPath" value="${enb.folder.ftp}"></property>
	</bean>
	
	<bean id="terminalUpgradeBreakpointResumeTaskManager" class="com.xinwei.minas.server.mcbts.task.TerminalUpgradeBreakpointResumeTaskManager" factory-method="getInstance" />
	
	<bean id="neighborFailedProcessTimerTask" class="com.xinwei.minas.server.mcbts.task.NeighborFailedProcessTimerTask">
		<property name="neighborService" ref="neighborService" />
	</bean>
	
	<bean id="jobDetailBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="neighborFailedProcessTimerTask"/>
		<property name="targetMethod" value="execute"/>
	</bean>
	
	<bean id="cronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetailBean"></property>
		<property name="cronExpression" value="${mcbts.neighborConfigure.task.startTime}"></property>
	</bean>
	
		
	<bean id="neighborSchedualValidatorService" class="com.xinwei.minas.server.mcbts.service.common.impl.NeighborSchedualValidatorServiceImpl">
	</bean>
	
	<bean id="neighborSchedualJobDetailBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="neighborSchedualValidatorService"/>
		<property name="targetMethod" value="validateTask"/>
	</bean>
	
	<bean id="neighborSchedualCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="neighborSchedualJobDetailBean"></property>
		<property name="cronExpression" value="${mcbts.neighborValidate.task.startTime}"></property>
	</bean>
	
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerBean" />
				<ref bean="neighborSchedualCronTriggerBean" />
			</list>
		</property>
	</bean>
	
	<bean id="commonChannelSynTask" class="com.xinwei.minas.server.mcbts.task.CommonChannelSynTask" factory-method="getInstance">
		 <property name="mChannelSynDAO" ref="commonChannelSynDAO"/>
		 <property name="mMcBtsAlarmHelper" ref="mcBtsAlarmHelper"/>
	</bean>
</beans>